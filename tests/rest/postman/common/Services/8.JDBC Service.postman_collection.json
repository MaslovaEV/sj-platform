{
	"id": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
	"name": "JDBC Service",
	"description": "",
	"order": [
		"6a9f2552-d9d4-6a4d-6150-3cddb6adac15",
		"85d94714-6807-70ec-2384-149009456bd0",
		"0e10d82a-d052-752e-175f-eed5608a5259",
		"5b620e2b-56a0-a020-5307-a254b394c94f",
		"3a66adaa-7ed8-7229-d0ee-176dba56ffe7",
		"0acf56a1-c49b-d8d8-d04d-537586d49a3e",
		"86b550c5-875d-6f46-6aec-9b7f2a69a0c0",
		"c799b26c-2863-0648-567b-c9f2522eea54",
		"b84d088f-b394-71b2-9760-19e388a6c3d6",
		"ead78aef-6953-ce8d-1e33-7995e2e8824d",
		"674cd64a-ec6d-ab2f-7928-f29a055e731c",
		"202393a6-f020-98c0-b643-666ab69d2bcc",
		"f0f053c7-cb75-c05c-e010-6551d1b61b45",
		"7156db8c-f871-04fd-4e54-e517b2e7b001",
		"796b778c-23ea-97c1-5328-4c973318878d",
		"845611f2-a8cb-c1ce-5d48-6b37b5e67e38",
		"647d5505-8b35-cf14-5c08-771bcd4972f6",
		"993aab39-96fa-1a78-7d33-cc0a25691195",
		"f33b384a-1e4a-b1bb-b053-4d097d33057b",
		"11091f60-debb-0494-061e-9cd7d320d996",
		"92e8beb4-74d6-5696-1d8b-84e4b8c6e561",
		"0db9616c-7713-7f08-39ae-7148e15811ad",
		"76e01a76-400d-7c20-f2a9-163f60f9ef80",
		"738ba88d-871e-7077-2456-e6ca5f34ccc1"
	],
	"folders": [],
	"timestamp": 1489118162500,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "0acf56a1-c49b-d8d8-d04d-537586d49a3e",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.5.Type_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118569869,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"\",\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "0db9616c-7713-7f08-39ae-7148e15811ad",
			"headers": "",
			"url": "{{address}}/v1/services/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.3.6.Get_deleted_service",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489120289733,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-jdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"aerospike_test_provider\",\r\n     \"zk-provider\": \"zookeeper_test_provider\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "0e10d82a-d052-752e-175f-eed5608a5259",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.6.Empty_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118435196,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "11091f60-debb-0494-061e-9cd7d320d996",
			"headers": "",
			"url": "{{address}}/v1/services/rest-jdbc/related",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.2.7.Related",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489375984896,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"streams\");\n\n\ntests[\"Body matches string\"] = responseBody.has(\"instances\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "202393a6-f020-98c0-b643-666ab69d2bcc",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.19.Provider_wrong_type",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489119172389,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' must be of type: 'JDBC' ('ES' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"good-es\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "3a66adaa-7ed8-7229-d0ee-176dba56ffe7",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.10.Already_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118535229,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service with name 'rest-jdbc' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "5b620e2b-56a0-a020-5307-a254b394c94f",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.11.Empty_name(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118449501,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "647d5505-8b35-cf14-5c08-771bcd4972f6",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.14.Driver_unknown_type",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489119760511,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type 'qqq' of driver provided. Must be one of: [postgresql, oracle, mysql].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"qqq\"\r\n}"
		},
		{
			"id": "674cd64a-ec6d-ab2f-7928-f29a055e731c",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.12.Provider_doesn't_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489119112887,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'jdbc-example1111' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example1111\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "6a9f2552-d9d4-6a4d-6150-3cddb6adac15",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.1.Correct_data",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118162500,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Body matches string\"] = responseBody.has(\"Service 'rest-jdbc' has been created.\");\n\ntests[\"Status code is 201\"] = responseCode.code === 201;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "7156db8c-f871-04fd-4e54-e517b2e7b001",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489119391091,
			"name": "Service_8.1.16.Database_1111",
			"description": "",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"1111\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "738ba88d-871e-7077-2456-e6ca5f34ccc1",
			"headers": "",
			"url": "{{address}}/v1/services/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.3.2.Delete_service_used_in_streams",
			"description": "",
			"descriptionFormat": "html",
			"time": 1491361078631,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete service 'rest-jdbc'. Service is used in streams\" );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"ESInd\",\r\n     \"name\": \"rest-elasticsearch\",\r\n     \"description\": \"elas\",\r\n     \"index\": \"a1\",\r\n     \"provider\": \"es_test_provider\",\r\n     \"login\": \"1\",\r\n     \"password\":\"1\"\r\n}"
		},
		{
			"id": "76e01a76-400d-7c20-f2a9-163f60f9ef80",
			"headers": "",
			"url": "{{address}}/v1/services/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.3.4.Delete_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489120306573,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-jdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"ESInd\",\r\n     \"name\": \"rest-elasticsearch\",\r\n     \"description\": \"elas\",\r\n     \"index\": \"a1\",\r\n     \"provider\": \"es_test_provider\",\r\n     \"login\": \"1\",\r\n     \"password\":\"1\"\r\n}"
		},
		{
			"id": "796b778c-23ea-97c1-5328-4c973318878d",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.20.Driver_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489119619482,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"'Driver' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"\"\r\n}"
		},
		{
			"id": "845611f2-a8cb-c1ce-5d48-6b37b5e67e38",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.13.Driver_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489119644905,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"'Driver' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\"\r\n    \r\n}"
		},
		{
			"id": "85d94714-6807-70ec-2384-149009456bd0",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.2.Wrong_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118308151,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect name: '1rest-jdbc'. Name of service must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"1rest-jdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "86b550c5-875d-6f46-6aec-9b7f2a69a0c0",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.18.Type_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118585460,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "92e8beb4-74d6-5696-1d8b-84e4b8c6e561",
			"headers": "",
			"url": "{{address}}/v1/services/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.3.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489120274012,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-jdbc' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"ESInd\",\r\n     \"name\": \"rest-elasticsearch\",\r\n     \"description\": \"elas\",\r\n     \"index\": \"a1\",\r\n     \"provider\": \"es_test_provider\",\r\n     \"login\": \"1\",\r\n     \"password\":\"1\"\r\n}"
		},
		{
			"id": "993aab39-96fa-1a78-7d33-cc0a25691195",
			"headers": "",
			"url": "{{address}}/v1/services/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.2.1.Get_by_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489120220052,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-jdbc\");\n\ntests[\"Body matches string\"] = responseBody.has(\"JDBC\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"aerospike_test_provider\",\r\n     \"zk-provider\": \"zookeeper_test_provider\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "b84d088f-b394-71b2-9760-19e388a6c3d6",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.7.Empty_provider",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118917847,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "c799b26c-2863-0648-567b-c9f2522eea54",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.15.Type_doesn't_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118835864,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type 'JDBC12' of service provided. Must be one of: [CassDB, ESInd, KfkQ, TstrQ, ZKCoord, ArspkDB, JDBC]\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC12\",\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"jdbc-example\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "ead78aef-6953-ce8d-1e33-7995e2e8824d",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.171Empty_provider(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489118931272,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n   \r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "f0f053c7-cb75-c05c-e010-6551d1b61b45",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.9.Database_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489119239268,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Database' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"JDBC\",\r\n     \"name\": \"rest-jdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"\",\r\n     \"provider\": \"good-es\",\r\n     \"driver\":\"postgresql\"\r\n}"
		},
		{
			"id": "f33b384a-1e4a-b1bb-b053-4d097d33057b",
			"headers": "",
			"url": "{{address}}/v1/services/rest-jdbc111",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "b408ad3e-e8f5-9c77-dcfd-b2e9e6bb3751",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.2.5.Get_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489120253756,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-jdbc111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-good\",\r\n     \"zk-provider\": \"zookeeper_test_provider\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		}
	]
}