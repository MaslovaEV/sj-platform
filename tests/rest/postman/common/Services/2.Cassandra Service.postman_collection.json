{
	"id": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
	"name": "Cassandra Service",
	"description": "",
	"order": [
		"c1869bdb-47d2-2c8e-22eb-03a445044b29",
		"8710c3ba-dbcb-c5f8-9fad-d0dc113c7934",
		"47719b5b-1fd5-d090-188d-0c9bda4d8714",
		"0f0bf4b4-b1ec-4167-5d50-db171bfaf1e1",
		"6efa9f57-8cfe-443e-aefe-ae4eb1a441f4",
		"0a2cca72-a27d-69c7-9d29-ca210613f2f8",
		"6cb7a8b7-a6de-40ea-75fd-8e7b16d6ebfb",
		"3c5664a0-30d7-f157-f25b-893dd28c58dc",
		"5083486f-7666-f0fe-4f52-eda571dbf9c3",
		"6f5e68a8-f2f2-e8d6-225a-ff1454ffcd0c",
		"7ec4954b-a022-1490-36d0-9066bda21963",
		"04e105ba-3525-2503-5f27-845e6f8682ba",
		"fb5c639a-1379-c237-4a7d-9d120b51971c",
		"cf2ba08d-b7aa-0196-cca6-1697dabe6048",
		"ac5c3e76-5bb3-f130-4928-31f5b210fac8",
		"6cbdaa85-ab35-c6d0-e7e6-4025fcdc01d0",
		"d443a26d-9b60-1680-db2c-04fa33e364d1",
		"6bcc678b-6be2-bd71-8aaa-235442e83fb3",
		"6fae66f0-83ea-5bcd-b082-eec59d81101e",
		"b4640175-e2a5-a628-8668-93cce83b9c9e"
	],
	"folders": [],
	"timestamp": 1479873594241,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "04e105ba-3525-2503-5f27-845e6f8682ba",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.12.Wrong_type",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874672730,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type 'CassDB11' provided. Must be one of: [CassDB, ESInd, KfkQ, TstrQ, ZKCoord, ArspkDB, JDBC].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB11\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "0a2cca72-a27d-69c7-9d29-ca210613f2f8",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.13.Empty_type(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874313458,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "0f0bf4b4-b1ec-4167-5d50-db171bfaf1e1",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.16.Empty_name(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874298850,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "3c5664a0-30d7-f157-f25b-893dd28c58dc",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479877257723,
			"name": "Service_2.1.15.Empty_provider(Empty_string)",
			"description": "",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\"\r\n\r\n}"
		},
		{
			"id": "47719b5b-1fd5-d090-188d-0c9bda4d8714",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.10.Already exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874265690,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service with name 'rest-cassandra' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "5083486f-7666-f0fe-4f52-eda571dbf9c3",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.7.Empty_provider",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482825178599,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\":\"\"\r\n}"
		},
		{
			"id": "6bcc678b-6be2-bd71-8aaa-235442e83fb3",
			"headers": "",
			"url": "{{address}}/v1/services/rest-cassandra",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.3.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479875043154,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-cassandra' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "6cb7a8b7-a6de-40ea-75fd-8e7b16d6ebfb",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.8.Empty_type",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482825114961,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "6cbdaa85-ab35-c6d0-e7e6-4025fcdc01d0",
			"headers": "",
			"url": "{{address}}/v1/services/rest-cassandra111",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.2.5.Get_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479875020522,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-cassandra111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-good\",\r\n     \"zk-provider\": \"zookeeper_test_provider\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "6efa9f57-8cfe-443e-aefe-ae4eb1a441f4",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.5.Empty_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482825152311,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "6f5e68a8-f2f2-e8d6-225a-ff1454ffcd0c",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.14.Empty_keyspace(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874607282,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Keyspace' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "6fae66f0-83ea-5bcd-b082-eec59d81101e",
			"headers": "",
			"url": "{{address}}/v1/services/rest-cassandra",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-cassandra' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484625366120,
			"name": "Service_2.2.6.Get_deleted_service",
			"description": "",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"aerospike_test_provider\",\r\n     \"zk-provider\": \"zookeeper_test_provider\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "7ec4954b-a022-1490-36d0-9066bda21963",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.6.Empty_keyspace",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482825202159,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Keyspace' is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "8710c3ba-dbcb-c5f8-9fad-d0dc113c7934",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.2.Wrong_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874070570,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect name: '1rest-cassandra'. Name of service must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"1rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "ac5c3e76-5bb3-f130-4928-31f5b210fac8",
			"headers": "",
			"url": "{{address}}/v1/services/rest-cassandra",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-cassandra\");\n\ntests[\"Body matches string\"] = responseBody.has(\"string_you_want_to_search\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482291452823,
			"name": "Service_2.2.1.Get_by_name",
			"description": "",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"aerospike_test_provider\",\r\n     \"zk-provider\": \"zookeeper_test_provider\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "b4640175-e2a5-a628-8668-93cce83b9c9e",
			"headers": "",
			"url": "{{address}}/v1/services/rest-cassandra",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-cassandra' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479877064619,
			"name": "Service_2.3.4.Delete_not_found",
			"description": "",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "c1869bdb-47d2-2c8e-22eb-03a445044b29",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-cassandra' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607866730,
			"name": "Service_2.1.1.Correct_data",
			"description": "",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "cf2ba08d-b7aa-0196-cca6-1697dabe6048",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.3.Wrong_keyspace",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874969530,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect 'keyspace': '11'. Name must be contain digits, lowercase letters or underscore. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"11\",\r\n     \"provider\": \"cassandra_test_provider\"\r\n}"
		},
		{
			"id": "d443a26d-9b60-1680-db2c-04fa33e364d1",
			"headers": "",
			"url": "{{address}}/v1/services/rest-cassandra/related",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_3.2.7.Related",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489375925540,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"streams\");\n\n\ntests[\"Body matches string\"] = responseBody.has(\"instances\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "fb5c639a-1379-c237-4a7d-9d120b51971c",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "25b892e4-6446-7bd0-056e-31cc8d5c483b",
			"data": [],
			"dataMode": "raw",
			"name": "Service_2.1.11.Wrong_type_provider",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479874880554,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider for 'CassDB' service must be of type 'cassandra' ('aerospike' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"CassDB\",\r\n     \"name\": \"rest-cassandra1\",\r\n     \"description\": \"cass\",\r\n     \"keyspace\": \"a1\",\r\n     \"provider\": \"aerospike_test_provider\"\r\n}"
		}
	]
}
