{
	"id": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
	"name": "Kafka Stream",
	"description": "",
	"order": [
		"5a822c43-c870-299a-880c-5880a9690479",
		"627ec640-bce9-827b-b01e-2ebd93127744",
		"ad5346ae-b974-308b-5844-e20e20f34112",
		"872fba31-c0cd-398d-374d-c411bd77e5b7",
		"8b00c79b-0c69-b3a1-1f49-47b73c09de1e",
		"dd19d68f-1753-129f-3770-406c72416797",
		"29e55350-f3d3-bf76-a4cb-00afff214ea7",
		"7908b117-017d-c5e2-7882-5216067e70eb",
		"b62f05ab-e05a-acf5-6b29-afd3eda68eec",
		"02729936-aec4-bc65-e94e-e8163a77d3b7",
		"e183368c-209a-e54b-54d0-bc2bc692cba2",
		"b256e374-777b-ce01-28b8-9067fc3448e3",
		"01082694-0e11-edb7-6d49-d0405ac4a999",
		"681480a7-b0a1-5235-f3e1-e9acde79389b",
		"d728a261-8ee4-1f76-95ef-69a97af17bcc",
		"2062a3ec-7a21-0ea8-649a-3cba0428d1b6",
		"fc698bdb-993e-8c93-62e6-6352d18409ec",
		"28986660-6c93-9f1b-88c9-53002cff4efc",
		"b4761f76-fb80-92a9-ea61-aa7a82a794f9",
		"964026e1-3f84-259c-8de0-8d11ab1614f7",
		"3d6888f4-4bd1-b9b3-c4b2-0c2e40469cbd",
		"2d23db0b-8b34-ad39-9be8-cb2873b6fabc",
		"e092f1a4-b5a4-b3ab-695f-dbfafb5c3201",
		"5d9f596c-736b-7b98-da5c-1a7698885e6b",
		"68ff1878-473c-2cbf-9f3a-359095d23cc2",
		"4cba1db1-90ab-c194-0ba6-46ab8e7ae62e"
	],
	"folders": [],
	"timestamp": 1480309092757,
	"owner": "1355770",
	"public": false,
	"requests": [
		{
			"id": "01082694-0e11-edb7-6d49-d0405ac4a999",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376446853,
			"name": "партиции 0",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 0,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "02729936-aec4-bc65-e94e-e8163a77d3b7",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796051133,
			"name": "пустой сервис (пустой массив)",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\n      \"stream-type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "2062a3ec-7a21-0ea8-649a-3cba0428d1b6",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"data": [],
			"dataMode": "raw",
			"name": "replication factor 0",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316612725,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Replication-factor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 0\r\n}\r\n\r\n"
		},
		{
			"id": "28986660-6c93-9f1b-88c9-53002cff4efc",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 500;\n\ntests[\"Body matches string\"] = responseBody.has(\"fails to meet a json schema\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484810063097,
			"name": "replication factor a",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": a\r\n}\r\n\r\n"
		},
		{
			"id": "29e55350-f3d3-bf76-a4cb-00afff214ea7",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796042950,
			"name": "пустой тип (пустой массив)",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\n      \"stream-type\": \"\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "2d23db0b-8b34-ad39-9be8-cb2873b6fabc",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams/rest-kafka111",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1483934172034,
			"name": "получить несуществующий стрим ",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "3d6888f4-4bd1-b9b3-c4b2-0c2e40469cbd",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482291587684,
			"name": "получить стрим по имени",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "4cba1db1-90ab-c194-0ba6-46ab8e7ae62e",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams/kafka",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"data": [],
			"dataMode": "raw",
			"name": "удаление потока который используется в инстансе",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482306190640,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 422;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete stream 'kafka'. Stream is used in instances.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.t-stream\",\r\n      \"name\": \"rest-tstream1\",\r\n      \"description\": \"Tstream example\",\r\n\r\n      \"service\": \"a-t-streams\",\r\n\r\n      \"force\": false,\r\n      \"generator\": {\r\n        \"generator-type\": \"global\",\r\n        \"service\": \"zookeeper-ps-service\",\r\n        \"instance-count\": 1\r\n      }\r\n}"
		},
		{
			"id": "5a822c43-c870-299a-880c-5880a9690479",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809832748,
			"name": "корректные данные",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "5d9f596c-736b-7b98-da5c-1a7698885e6b",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484626094887,
			"name": "получить удаленный стрим",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "627ec640-bce9-827b-b01e-2ebd93127744",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796030598,
			"name": "пустое имя",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n"
		},
		{
			"id": "681480a7-b0a1-5235-f3e1-e9acde79389b",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376441374,
			"name": "партиции -5",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": -5,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "68ff1878-473c-2cbf-9f3a-359095d23cc2",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams/rest-kafka",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"data": [],
			"dataMode": "raw",
			"name": "удаление не существующего",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316904845,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "7908b117-017d-c5e2-7882-5216067e70eb",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"data": [],
			"dataMode": "raw",
			"name": "неизвестный тип",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316331516,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type '111stream.kafka' provided. Must be one of: [stream.t-stream, stream.kafka, jdbc-output, elasticsearch-output].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\n      \"stream-type\": \"111stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "872fba31-c0cd-398d-374d-c411bd77e5b7",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"data": [],
			"dataMode": "raw",
			"name": "уже существует",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316203828,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" Stream with name 'rest-kafka' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\n      \"stream-type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "8b00c79b-0c69-b3a1-1f49-47b73c09de1e",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream has incorrect name: '1rest-kafka'. Name of stream must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376496933,
			"name": "некорректное имя",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\n      \"stream-type\": \"stream.kafka\",\n      \"name\": \"1rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "964026e1-3f84-259c-8de0-8d11ab1614f7",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Replication-factor' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796068461,
			"name": "пустой replication factor ",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n\r\n}\r\n\r\n"
		},
		{
			"id": "ad5346ae-b974-308b-5844-e20e20f34112",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796034294,
			"name": "пустое имя (пустой массив)",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n"
		},
		{
			"id": "b256e374-777b-ce01-28b8-9067fc3448e3",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service for 'stream.kafka' stream' must be of type: 'KfkQ' ('TstrQ' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484795320509,
			"name": "сервис не кафка",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\n      \"stream-type\": \"stream.kafka\",\n      \"name\": \"rest-kafka1\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"a-t-streams\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "b4761f76-fb80-92a9-ea61-aa7a82a794f9",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796057133,
			"name": "пустые партиции",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "b62f05ab-e05a-acf5-6b29-afd3eda68eec",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796047759,
			"name": "пустой сервис",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\n      \"stream-type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "d728a261-8ee4-1f76-95ef-69a97af17bcc",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 500;\n\ntests[\"Body matches string\"] = responseBody.has(\"fails to meet a json schema\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484810047401,
			"name": "партиции a",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": а,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "dd19d68f-1753-129f-3770-406c72416797",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809887763,
			"name": "пустой тип",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\n\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "e092f1a4-b5a4-b3ab-695f-dbfafb5c3201",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been deleted.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809671783,
			"name": "удаление ",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "e183368c-209a-e54b-54d0-bc2bc692cba2",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service '111kafka-ps-service' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809939484,
			"name": "сервис не существует",
			"description": "",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"responses": [],
			"rawModeData": "{\n      \"stream-type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"111kafka-ps-service\",\n      \"force\": false,\n      \"replication-factor\": 1\n}\n\n"
		},
		{
			"id": "fc698bdb-993e-8c93-62e6-6352d18409ec",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "16ccf500-69d4-d24b-86fd-f38f33f56bec",
			"data": [],
			"dataMode": "raw",
			"name": "replication factor -5",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482376413038,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Replication-factor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": -5\r\n}\r\n\r\n"
		}
	]
}