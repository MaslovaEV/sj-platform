{
	"id": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
	"name": "JDBC Stream",
	"description": "",
	"order": [
		"033f0d9c-25c1-0999-5b95-8254a66095bd",
		"f12c46bd-c105-9339-937a-b1193997cfda",
		"1c8d5ed7-03fd-6da8-ed6c-eba5bcfb7fff",
		"6482727a-a82d-e439-4746-6f871b889edb",
		"6cc5599d-8a33-a7af-7cb8-93afe4d6f45c",
		"2d475f8b-b75d-cf4b-31e9-c640c054773b",
		"61a2de68-2414-cc12-9a0f-dc75db8904dd",
		"0ee9aff2-29f4-5dc8-09bc-5db7ffca43b3",
		"8d631b3b-8cd6-bf9f-62c5-e34add7ec349",
		"4466ae4a-1a77-335b-64f6-fae9f6f66a5a",
		"a331d528-f821-5129-cd54-27f59b797807",
		"ade16601-11bb-9fc8-3f7d-e7db38ed1f56",
		"a246aa4f-a83c-cbf7-bb7a-938e018473ae",
		"c709b358-2942-b1d3-a73f-31e5a5200b0a",
		"d9cfc4f0-123d-9215-6199-003c25093efa",
		"edc166ff-8b66-cc3b-b13a-4240a9754256",
		"55da89fb-f694-7f26-aebc-951b3bac0557",
		"b1245cbc-7d84-3f17-b91f-689f0df9241e"
	],
	"folders": [],
	"timestamp": 1489121639982,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "033f0d9c-25c1-0999-5b95-8254a66095bd",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has been  created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489121764468,
			"name": "Correct_data",
			"description": "",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "0ee9aff2-29f4-5dc8-09bc-5db7ffca43b3",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Type_doesn't_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122299983,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type 'qqq' of stream provided. Must be one of: [stream.t-stream, stream.kafka, jdbc-output, elasticsearch-output].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"qqq\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "1c8d5ed7-03fd-6da8-ed6c-eba5bcfb7fff",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Name_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122035835,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n    \r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "2d475f8b-b75d-cf4b-31e9-c640c054773b",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Type_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122243673,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "4466ae4a-1a77-335b-64f6-fae9f6f66a5a",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Service_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122374303,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "55da89fb-f694-7f26-aebc-951b3bac0557",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Get_deleted",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122671894,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "61a2de68-2414-cc12-9a0f-dc75db8904dd",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Type_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122315297,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "6482727a-a82d-e439-4746-6f871b889edb",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Already_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122111723,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream with name 'rest-jdbc' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "6cc5599d-8a33-a7af-7cb8-93afe4d6f45c",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Wrong_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122170089,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream has incorrect name: '1rest-jdbc'. Name of stream must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"1rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "8d631b3b-8cd6-bf9f-62c5-e34add7ec349",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Service_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122360087,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "a246aa4f-a83c-cbf7-bb7a-938e018473ae",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Get_by_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122612349,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-jdbc\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "a331d528-f821-5129-cd54-27f59b797807",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Service_doesn't_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122423022,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'qqq' does not exist\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"qqq\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "ade16601-11bb-9fc8-3f7d-e7db38ed1f56",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Service_wrong_type",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122563324,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service for 'jdbc-output' stream must be of type: 'JDBC' ('ESInd' is given instead)\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"aelas\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "b1245cbc-7d84-3f17-b91f-689f0df9241e",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Delete_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122683892,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "c709b358-2942-b1d3-a73f-31e5a5200b0a",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc111",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Get_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122635893,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "d9cfc4f0-123d-9215-6199-003c25093efa",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc/related",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.2.7.Related",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489377740871,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"instances\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "edc166ff-8b66-cc3b-b13a-4240a9754256",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122651412,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has been deleted.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "f12c46bd-c105-9339-937a-b1193997cfda",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "1ecb4614-d9ec-94f9-c21e-77bc27fa8268",
			"data": [],
			"dataMode": "raw",
			"name": "Name_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122006771,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		}
	]
}
