{
	"id": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
	"name": "JDBC Stream",
	"description": "",
	"order": [
		"558b4caa-dc4d-d535-520a-f08e249a44a4",
		"a6949a64-b089-9e90-a42b-1651cb671264",
		"68d12546-e06f-3f47-94cd-d23f8d50bd58",
		"c6695c40-1df2-207a-ea88-cacd88eda7e2",
		"81d1df54-887c-1284-e37e-337e9c86f5e6",
		"806db792-0f00-0aa3-e397-1f10666215b0",
		"3213576d-1d12-1e38-8080-2932fca23d68",
		"a8b8a52e-4339-5d54-951b-90f2b21eec88",
		"ada5e051-f7ff-d462-f2cd-be9a71aae031",
		"61c41e92-c996-3e63-2358-b8ade137d620",
		"f2008fe1-8abc-834e-fda8-098eb04bb217",
		"60d7d8d5-c5be-770b-38af-871d7fd8f3d9",
		"37d7300b-a54e-205f-0196-1a02b061890a",
		"e6b00273-7d92-e3ed-3f70-22d6b9772dcb",
		"9f1b3e24-8262-f60d-24cd-820f255e5285",
		"1aec743b-9431-7555-478f-6ef67f5b9895",
		"d8fa9726-a15d-93d4-14c1-44768e088926",
		"52c9dc01-0e92-08b6-2477-c453a56d625c",
		"279eefa3-936f-2f52-3cf1-0bb4d3ec0997"
	],
	"folders": [],
	"timestamp": 1489121639982,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "1aec743b-9431-7555-478f-6ef67f5b9895",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.3.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122651412,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has been deleted.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "279eefa3-936f-2f52-3cf1-0bb4d3ec0997",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.3.2.Delete_service_used_in_streams",
			"description": "",
			"descriptionFormat": "html",
			"time": 1491361290560,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete stream 'rest-jdbc'. Stream is used in instances.\" );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "3213576d-1d12-1e38-8080-2932fca23d68",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.11.Type_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122315297,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "37d7300b-a54e-205f-0196-1a02b061890a",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.2.1.Get_by_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122612349,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-jdbc\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "52c9dc01-0e92-08b6-2477-c453a56d625c",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.3.4.Delete_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122683892,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "558b4caa-dc4d-d535-520a-f08e249a44a4",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has been  created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489121764468,
			"name": "Stream_5.1.1.Correct_data",
			"description": "",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "60d7d8d5-c5be-770b-38af-871d7fd8f3d9",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.14.Service_wrong_type",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122563324,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service for 'jdbc-output' stream must be of type: 'JDBC' ('ESInd' is given instead)\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"aelas\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "61c41e92-c996-3e63-2358-b8ade137d620",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.12.Service_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122374303,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "68d12546-e06f-3f47-94cd-d23f8d50bd58",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.10.Name_empty(empty_string)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122035835,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n    \r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "806db792-0f00-0aa3-e397-1f10666215b0",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.7.Type_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122243673,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "81d1df54-887c-1284-e37e-337e9c86f5e6",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.2.Wrong_name",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122170089,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream has incorrect name: '1rest-jdbc'. Name of stream must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"1rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "9f1b3e24-8262-f60d-24cd-820f255e5285",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc/related",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.2.7.Related",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489377740871,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"instances\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "a6949a64-b089-9e90-a42b-1651cb671264",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.7.Name_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122006771,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "a8b8a52e-4339-5d54-951b-90f2b21eec88",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.15.Type_doesn't_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122299983,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type 'qqq' of stream provided. Must be one of: [stream.t-stream, stream.kafka, jdbc-output, elasticsearch-output].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"qqq\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "ada5e051-f7ff-d462-f2cd-be9a71aae031",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.6.Service_empty",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122360087,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "c6695c40-1df2-207a-ea88-cacd88eda7e2",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.3.Already_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122111723,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream with name 'rest-jdbc' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"test-jdbc\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		},
		{
			"id": "d8fa9726-a15d-93d4-14c1-44768e088926",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.2.6.Get_deleted",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122671894,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "e6b00273-7d92-e3ed-3f70-22d6b9772dcb",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-jdbc111",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.2.5.Get_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122635893,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-jdbc111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "f2008fe1-8abc-834e-fda8-098eb04bb217",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "5b72ebbb-66cb-647c-c86c-18f2fd508599",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_5.1.13.Service_doesn't_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489122423022,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'qqq' does not exist\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"jdbc-output\",\r\n      \"name\": \"rest-jdbc\",\r\n      \"description\": \"jdbc example\",\r\n      \"service\": \"qqq\",\r\n      \"Primary\": \"1111\"\r\n}\r\n"
		}
	]
}
