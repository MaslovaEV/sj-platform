{
	"id": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
	"name": "Kafka Stream",
	"description": "",
	"order": [
		"faedfa72-452f-5c03-afe8-a66096d1c6b2",
		"9b46659a-7c5d-1b87-378a-66d6becdfed1",
		"54995ee2-bdfc-c44b-2948-3ea3a10cb0d3",
		"edcbdbaf-c884-d071-aa1e-30a913967f78",
		"e700f2b9-1851-47b8-614c-14c204a5777c",
		"7e4c827a-cabf-4c10-4b6b-64c0f61764a8",
		"577c276a-1b71-76bf-1608-7eae63291055",
		"9a5f22ef-947a-6f99-8247-eba8b5cdb101",
		"53e26622-f45f-fa92-2aa1-d3678d7b3c3c",
		"2727b3f4-e55f-b52f-1e08-05c31ff47d7d",
		"00095af8-429d-1fcd-07e3-1342cf48956c",
		"77f3122c-3cfa-c113-ca1c-e213741587f5",
		"fb9144f4-a150-dc3b-6cbc-3c03a56a14f2",
		"b413a7a4-dde8-a96b-50b5-04a6a3c98897",
		"7fda417a-5f58-45bc-4ed1-130e32a2f3f5",
		"4949f690-65e5-1806-abc8-2bb9c78ae5e7",
		"c6b179a6-5e95-9ec0-cfd8-489c91caeb2a",
		"d93c6826-d7af-cf30-45d4-6d6fc0ff079b",
		"41060ada-9250-94f9-84cd-f9e8b277dc56",
		"c17d4ded-b34a-9a7c-435a-14fc74023127",
		"c470c084-366a-ba04-8672-089fc7c708b3",
		"cf004f34-2463-f78b-4a1d-d9c1e88466f7",
		"fc9152b1-1b70-5ae9-ac8c-ef1d32d88da9",
		"192be0a7-ca0e-4fca-dadc-65bc8c76feff",
		"e6bbfb0f-ec66-d303-522c-8a2be0beaf8f",
		"dc0042d3-534c-8cf7-ccae-6ddb0148f94f",
		"34ce062d-dcf8-bdf3-2fb6-871a73986e6f"
	],
	"folders": [],
	"timestamp": 1480309092757,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "00095af8-429d-1fcd-07e3-1342cf48956c",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service '111kafka-ps-service' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809939484,
			"name": "Stream_3.1.14.Service_doesn't_exists",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"111kafka-ps-service\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "192be0a7-ca0e-4fca-dadc-65bc8c76feff",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484626094887,
			"name": "Stream_3.3.получить удаленный стрим",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "2727b3f4-e55f-b52f-1e08-05c31ff47d7d",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796051133,
			"name": "Stream_3.1.8.Empty_service",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "34ce062d-dcf8-bdf3-2fb6-871a73986e6f",
			"headers": "",
			"url": "{{address}}/v1/streams/_types",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"stream.t-stream\");\n\ntests[\"Body matches string\"] = responseBody.has(\"stream.kafka\");\n\ntests[\"Body matches string\"] = responseBody.has(\"jdbc-output\");\n\ntests[\"Body matches string\"] = responseBody.has(\"elasticsearch-output\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485750656885,
			"name": "Stream_1.3.Get_list_of_streams_types",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "41060ada-9250-94f9-84cd-f9e8b277dc56",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796068461,
			"name": "Stream_3.1.22.Empty_replication_factor(empty_string)",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n\r\n}\r\n\r\n"
		},
		{
			"id": "4949f690-65e5-1806-abc8-2bb9c78ae5e7",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.5,Wrong_replication_factor",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316612725,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 0\r\n}\r\n\r\n"
		},
		{
			"id": "53e26622-f45f-fa92-2aa1-d3678d7b3c3c",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796047759,
			"name": "Stream_3.1.20.Empty_service(empty_string)",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "54995ee2-bdfc-c44b-2948-3ea3a10cb0d3",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796034294,
			"name": "Stream_3.1.7.Empty_name",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n"
		},
		{
			"id": "577c276a-1b71-76bf-1608-7eae63291055",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796042950,
			"name": "Stream_3.1.9.Empty_type",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "77f3122c-3cfa-c113-ca1c-e213741587f5",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service for 'stream.kafka' stream' must be of type: 'KfkQ' ('TstrQ' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484795320509,
			"name": "Stream_3.1.15.Wrong_service",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka1\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"a-t-streams\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "7e4c827a-cabf-4c10-4b6b-64c0f61764a8",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809887763,
			"name": "Stream_3.1.19.Empty_type(empty_string)",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\n\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "7fda417a-5f58-45bc-4ed1-130e32a2f3f5",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 500;\n\ntests[\"Body matches string\"] = responseBody.has(\"fails to meet a json schema\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484810047401,
			"name": "Stream_3.1.23.Partitions_string",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": а,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "9a5f22ef-947a-6f99-8247-eba8b5cdb101",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.13.Wrong_type",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316331516,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type '111stream.kafka' provided. Must be one of: [stream.t-stream, stream.kafka, jdbc-output, elasticsearch-output].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\n      \"type\": \"111stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "9b46659a-7c5d-1b87-378a-66d6becdfed1",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796030598,
			"name": "Stream_3.1.18.Empty_name(empty_string)",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n"
		},
		{
			"id": "b413a7a4-dde8-a96b-50b5-04a6a3c98897",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376441374,
			"name": "Stream_3.1.16.Negative_value_in_partitions",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": -5,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "c17d4ded-b34a-9a7c-435a-14fc74023127",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482291587684,
			"name": "Stream_3.2.1.Get_by_name",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "c470c084-366a-ba04-8672-089fc7c708b3",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka111",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1483934172034,
			"name": "Stream_3.2.5.Get_not_found",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "c6b179a6-5e95-9ec0-cfd8-489c91caeb2a",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.17.Negative_value_in_replication factor",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482376413038,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": -5\r\n}\r\n\r\n"
		},
		{
			"id": "cf004f34-2463-f78b-4a1d-d9c1e88466f7",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka/related",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.2.7.Related",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489377977819,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"instances\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "d93c6826-d7af-cf30-45d4-6d6fc0ff079b",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796057133,
			"name": "Stream_3.1.пустые партиции(empty_string)",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "dc0042d3-534c-8cf7-ccae-6ddb0148f94f",
			"headers": "",
			"url": "{{address}}/v1/streams/kafka",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.3.2.Used_in_instance",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482306190640,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 422;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete stream 'kafka'. Stream is used in instances.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.t-stream\",\r\n      \"name\": \"rest-tstream1\",\r\n      \"description\": \"Tstream example\",\r\n\r\n      \"service\": \"a-t-streams\",\r\n\r\n      \"force\": false,\r\n      \"generator\": {\r\n        \"generator-type\": \"global\",\r\n        \"service\": \"zookeeper-ps-service\",\r\n        \"instance-count\": 1\r\n      }\r\n}"
		},
		{
			"id": "e6bbfb0f-ec66-d303-522c-8a2be0beaf8f",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.3.4.Delete_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316904845,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "e700f2b9-1851-47b8-614c-14c204a5777c",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream has incorrect name: '1rest-kafka'. Name of stream must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376496933,
			"name": "Stream_3.1.2.Wrong_name",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"1rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "edcbdbaf-c884-d071-aa1e-30a913967f78",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.3.Already_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316203828,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" Stream with name 'rest-kafka' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"kafka-ps-service\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "faedfa72-452f-5c03-afe8-a66096d1c6b2",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809832748,
			"name": "Stream_3.1.1.Correct_data",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "fb9144f4-a150-dc3b-6cbc-3c03a56a14f2",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376446853,
			"name": "Stream_3.1.4.Wrong_partitions",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 0,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "fc9152b1-1b70-5ae9-ac8c-ef1d32d88da9",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been deleted.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809671783,
			"name": "Stream_3.3.1.Delete",
			"description": "",
			"collectionId": "24d18f56-33d4-e8ed-a4a0-fa9806cbfb45",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		}
	]
}
