{
	"id": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
	"name": "Kafka Provider",
	"description": "",
	"order": [
		"4a64b174-7d66-b72d-97be-50a067f91f01",
		"5f6e9c5c-34d0-a4b9-4c83-92bc56baecc6",
		"538266c4-d9d2-d4f3-e05a-750e8d292087",
		"da2d6824-30d4-2279-cedf-ac47d3f86001",
		"0e794298-70c5-b05c-54a3-b5a28d1283b3",
		"fe5e20e0-5d9d-ffef-1db9-2094d4a7a092",
		"d1825043-1a36-1aa2-7a9d-108bcc7141c7",
		"9e7f8477-016b-f3c1-0b02-4af97607c6a2",
		"e7755eac-890e-2372-b9b8-922a2c3383a2",
		"a45cf8d1-b2be-0961-5db5-606adc247155",
		"d515557c-541e-ccc7-b2f7-105f3e6bea14",
		"72e15dfb-3271-294b-05c5-7a1d6a7649c8",
		"fe511a00-03c5-8c8f-5336-1c33439c34c5",
		"a359b898-b697-f4cb-3961-dfbfbad20377",
		"2e93e8db-3deb-ef27-e11b-207b642e79e9",
		"23a73f01-123c-d56b-995a-d29c3842c919",
		"fe518b52-f362-9c4e-7871-985fb1100743",
		"7d96d62f-e937-f9d6-c6b5-237816101c2c",
		"c6e76679-9bdf-935e-49d4-6f6f0390ba78",
		"8fb954f5-d937-bb1a-405b-15da060ff247",
		"fe57e7f2-4319-765c-9184-ef3d2ef582b3",
		"cce318df-0533-333d-0394-6700de8dd9ab",
		"f740933c-5cc0-eaa1-586f-46363215c1d0",
		"6e18af5c-d6a6-fcf5-4be1-2867e9c0d696"
	],
	"folders": [],
	"timestamp": 1479450537778,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "0e794298-70c5-b05c-54a3-b5a28d1283b3",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Wrong host provided\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479451978618,
			"name": "Provider_4.1.3.Wrong_host_provided",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"дд\"\r\n      ]\r\n}"
		},
		{
			"id": "23a73f01-123c-d56b-995a-d29c3842c919",
			"headers": "",
			"url": "{{address}}/v1/providers/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_1.1.Get_list_of_all_providers",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479694619313,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "2e93e8db-3deb-ef27-e11b-207b642e79e9",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example11111",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479710718555,
			"name": "Provider_4.2.4.Get_not_found_provider_by_name",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "4a64b174-7d66-b72d-97be-50a067f91f01",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607241322,
			"name": "Provider_4.1.1.Correct_data",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"176.120.25.19:9092\"\r\n      ]\r\n}"
		},
		{
			"id": "538266c4-d9d2-d4f3-e05a-750e8d292087",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider with name 'kafka-example' already exists\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479710651797,
			"name": "Provider_4.1.4.Already_exists",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "5f6e9c5c-34d0-a4b9-4c83-92bc56baecc6",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider has incorrect name: '1kafka-example'. Name of provider must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479452179945,
			"name": "Provider_4.1.2.Incorrect_name",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "6e18af5c-d6a6-fcf5-4be1-2867e9c0d696",
			"headers": "",
			"url": "{{address}}/v1/providers/_types",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"cassandra\");\n\ntests[\"Body matches string\"] = responseBody.has(\"aerospike\");\n\ntests[\"Body matches string\"] = responseBody.has(\"zookeeper\");\n\ntests[\"Body matches string\"] = responseBody.has(\"kafka\");\n\ntests[\"Body matches string\"] = responseBody.has(\"ES\");\n\ntests[\"Body matches string\"] = responseBody.has(\"JDBC\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1485752294038,
			"name": "Provider_1.5.Get_list_of_provider_types",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "72e15dfb-3271-294b-05c5-7a1d6a7649c8",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Hosts' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882452751,
			"name": "Provider_4.1.6.Empty_hosts",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\"\r\n    \r\n}"
		},
		{
			"id": "7d96d62f-e937-f9d6-c6b5-237816101c2c",
			"headers": "",
			"url": "{{address}}/v1/providers/test-test/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 409\"] = responseCode.code === 409;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607612851,
			"name": "Provider_4.3.2.Test_connection_not_available",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "8fb954f5-d937-bb1a-405b-15da060ff247",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example/related",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.2.6.Related",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489132459065,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"services\");\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"stream-type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"kafka-ps-service\",\r\n      \"force\": false,\r\n      \"replication-factor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "9e7f8477-016b-f3c1-0b02-4af97607c6a2",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882429385,
			"name": "Provider_4.1.20.Empty_type(empty_string)",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"111\"\r\n      ]\r\n}"
		},
		{
			"id": "a359b898-b697-f4cb-3961-dfbfbad20377",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"kafka-example\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1483947697591,
			"name": "Provider_4.2.1.Get_provider_by_name",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "a45cf8d1-b2be-0961-5db5-606adc247155",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882439064,
			"name": "Provider_4.1.20.Empty_type(empty_string)",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n    \r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "c6e76679-9bdf-935e-49d4-6f6f0390ba78",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka_test_provider1111/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider not found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607620090,
			"name": "Provider_4.3.3.Test_connection_Unknown",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "cce318df-0533-333d-0394-6700de8dd9ab",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484624014089,
			"name": "Provider_4.2.5.Get_delited_provider",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "d1825043-1a36-1aa2-7a9d-108bcc7141c7",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Host cannot contain any uri path\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479701346427,
			"name": "Provider_4.1.9.Wrong_hosts_URI",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"/Users/bardina_md/Desktop\"\r\n      ]\r\n}"
		},
		{
			"id": "d515557c-541e-ccc7-b2f7-105f3e6bea14",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882445359,
			"name": "Provider_4.2.7.Empty_type",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\":\"\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "da2d6824-30d4-2279-cedf-ac47d3f86001",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" Unknown type '1kafka' provided. Must be one of: [ES, cassandra, aerospike, kafka, zookeeper, JDBC]\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479452064642,
			"name": "Provider_4.1.17Wrong_type",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"1kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "e7755eac-890e-2372-b9b8-922a2c3383a2",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882432935,
			"name": "Provider_4.1.5.Empty_name",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\":\"\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"111\"\r\n      ]\r\n}"
		},
		{
			"id": "f740933c-5cc0-eaa1-586f-46363215c1d0",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484624515907,
			"name": "Provider_4.3.4.Delete_not_found",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1111111kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "fe511a00-03c5-8c8f-5336-1c33439c34c5",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.1.21.Empty_hosts(empty_array)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482208182780,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Hosts' must contain at least one host.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n    \"hosts\": []\r\n}"
		},
		{
			"id": "fe518b52-f362-9c4e-7871-985fb1100743",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479711048242,
			"name": "Provider_4.3.1.Test_connection_available",
			"description": "",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "fe57e7f2-4319-765c-9184-ef3d2ef582b3",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.4.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479453678099,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "fe5e20e0-5d9d-ffef-1db9-2094d4a7a092",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "8aca6553-e0d2-1c31-62af-e89de2e9869d",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.1.18.negative_value_in_Host",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482376737988,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Wrong host provided\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        -5\r\n      ]\r\n}"
		}
	]
}
