{
	"id": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
	"name": "1 Kafka Provider",
	"description": "",
	"order": [
		"13c44b55-f158-4808-3d1b-6e0c9c8dcd64",
		"4a565c69-cf07-2c0a-8a90-a4716f2ccd3f",
		"2a585b8a-e0ba-684b-f0c6-8d8d1ab67bee",
		"552fdafe-5631-35cf-29e5-292f35e93696",
		"1187a72d-ee4c-520a-fad2-53802de36c6d",
		"3a2d3272-10db-1d97-c244-bcf5ea639ef1",
		"2f50705a-0e44-0ff0-3c73-aed9c579e697",
		"69b6e09a-fd5b-b75b-ca61-5e455e3cbb1d",
		"159ffc17-157e-c06d-5c6c-92207af1a6d2",
		"3de2287c-d17f-f7ce-9757-c947aff56e8d",
		"e7b2fa30-700a-a12a-67f8-22dd79696b1e",
		"c9d6708e-7e1b-4ec0-596d-235707e8f4b3",
		"66a71ef0-9517-7e61-4925-59b6f9ffde75",
		"c4a0168f-7448-5ac2-9907-842d24601ba1",
		"b7912d26-cabb-7d00-ae5e-ec821336b6cb",
		"d3627ea6-7f6a-42b6-6f05-8d343ec46aa1",
		"e04d6e67-1e82-1bba-36cf-35bb98628230",
		"7d82c83e-046e-1f3e-4dbc-584174557ae7",
		"7e3ff1c9-45ee-0594-1a1f-f695fcee0a07",
		"d9e90969-8a66-9896-8cdd-dbfa82d4c9cf",
		"e51e1103-98ff-677d-6785-b65351c41024",
		"21c0521a-399c-0a7d-566b-d1f2f6744b87",
		"2ff86492-6cec-13c8-9c9f-1875237daef2",
		"8c1572c1-a27c-4186-2f00-21643ba1a7a6",
		"e167f5cb-5372-1667-ed19-66eca72ca9a6"
	],
	"folders": [],
	"timestamp": 1479450537778,
	"owner": "1355770",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "1187a72d-ee4c-520a-fad2-53802de36c6d",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Wrong host provided\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479451978618,
			"name": "неверный хост",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"дд\"\r\n      ]\r\n}"
		},
		{
			"id": "13c44b55-f158-4808-3d1b-6e0c9c8dcd64",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607241322,
			"name": "корректные данные",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"176.120.25.19:9092\"\r\n      ]\r\n}"
		},
		{
			"id": "159ffc17-157e-c06d-5c6c-92207af1a6d2",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882432935,
			"name": "пустое имя (пустой массив)",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\":\"\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"111\"\r\n      ]\r\n}"
		},
		{
			"id": "21c0521a-399c-0a7d-566b-d1f2f6744b87",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/kafka-example",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"data": [],
			"dataMode": "raw",
			"name": "удаление",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479453678099,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "2a585b8a-e0ba-684b-f0c6-8d8d1ab67bee",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider with name 'kafka-example' already exists\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479710651797,
			"name": "уже существует",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "2f50705a-0e44-0ff0-3c73-aed9c579e697",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Host cannot contain any uri path\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479701346427,
			"name": "неверный хост url",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"/Users/bardina_md/Desktop\"\r\n      ]\r\n}"
		},
		{
			"id": "2ff86492-6cec-13c8-9c9f-1875237daef2",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484624014089,
			"name": "получение удаленного провайдера",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "3a2d3272-10db-1d97-c244-bcf5ea639ef1",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"data": [],
			"dataMode": "raw",
			"name": "хост -5",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482376737988,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Wrong host provided\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        -5\r\n      ]\r\n}"
		},
		{
			"id": "3de2287c-d17f-f7ce-9757-c947aff56e8d",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882439064,
			"name": "пустой тип",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n    \r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "4a565c69-cf07-2c0a-8a90-a4716f2ccd3f",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider has incorrect name: '1kafka-example'. Name of provider must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479452179945,
			"name": "начинается с цифры",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "552fdafe-5631-35cf-29e5-292f35e93696",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" Unknown type '1kafka' provided. Must be one of: [ES, cassandra, aerospike, kafka, zookeeper, JDBC]\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479452064642,
			"name": "неверный тип",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"1kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "66a71ef0-9517-7e61-4925-59b6f9ffde75",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"data": [],
			"dataMode": "raw",
			"name": "пустой хост (пустой массив)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482208182780,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Hosts' must contain at least one host.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n    \"hosts\": []\r\n}"
		},
		{
			"id": "69b6e09a-fd5b-b75b-ca61-5e455e3cbb1d",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882429385,
			"name": "пустое имя",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"111\"\r\n      ]\r\n}"
		},
		{
			"id": "7d82c83e-046e-1f3e-4dbc-584174557ae7",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"data": [],
			"dataMode": "raw",
			"name": "получение списка провайдеров",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479694619313,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "7e3ff1c9-45ee-0594-1a1f-f695fcee0a07",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/kafka-example/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479711048242,
			"name": "проверка соединения available",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "8c1572c1-a27c-4186-2f00-21643ba1a7a6",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484624515907,
			"name": "удаление не существующего провайдера",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1111111kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "b7912d26-cabb-7d00-ae5e-ec821336b6cb",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"data": [],
			"dataMode": "raw",
			"name": "имя с русскими буквами",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479452913691,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"  Provider has incorrect name: 'ййй'. Name of provider must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"ййй\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "c4a0168f-7448-5ac2-9907-842d24601ba1",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"data": [],
			"dataMode": "raw",
			"name": "имя с большой буквы",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479452825731,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"  Provider has incorrect name: 'Kafka-example1'. Name of provider must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"Kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "c9d6708e-7e1b-4ec0-596d-235707e8f4b3",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Hosts' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882452751,
			"name": "пустой хост",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\"\r\n    \r\n}"
		},
		{
			"id": "d3627ea6-7f6a-42b6-6f05-8d343ec46aa1",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"kafka-example\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1483947697591,
			"name": "получение провайдера по имени",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "d9e90969-8a66-9896-8cdd-dbfa82d4c9cf",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/test-test/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 409\"] = responseCode.code === 409;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607612851,
			"name": "проверка соединения not available",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "e04d6e67-1e82-1bba-36cf-35bb98628230",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/kafka-example11111",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479710718555,
			"name": "получение несуществующего провайдера по имени",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "e167f5cb-5372-1667-ed19-66eca72ca9a6",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/kafka-ps-provider",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'kafka-ps-provider'. Provider is used in services.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479454021931,
			"name": "удаление провайдера, который используется в сервиса",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-ps-provider\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "e51e1103-98ff-677d-6785-b65351c41024",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers/kafka_test_provider1111/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider not found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607620090,
			"name": "проверка соединения Unknown",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "e7b2fa30-700a-a12a-67f8-22dd79696b1e",
			"headers": "",
			"url": "http://176.120.25.19:28080/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882445359,
			"name": "пустой тип (пустой массив)",
			"description": "",
			"collectionId": "9a1bfc1a-dca4-9e3a-5301-c2e7de665f24",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\":\"\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		}
	]
}